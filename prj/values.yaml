prj:
  fullname: prj
  labels: prj-lab
  service:
    port: 8081
nginx:
  name: nginx
  replicas: 1
  ports:
    name: "8080"
    port: 8081
    targetPort: 8080
  strategy:
    type: 
  containers:
    image: nginx:latest
    ports:
      containerPort: 8080
movie:
  name: movie
  replicas: 1
  image:
    repository: "lmalta3/movie-service"
    tag: "v1"
  spec:
    ports:
      name: "8001"
      port: 8001
      targetPort: 8000
  containers:
    env:
      CAST_SERVICE_HOST_URL: http://cast_service:8000/api/v1/casts/
      DATABASE_URI: postgresql://movie_db_username:movie_db_password@movie_db/movie_db_dev
    ports:
      containerPort: 8000
    volumeMounts:
          mountPath: /app/
    restartPolicy: Always
    pvc:
      accessModes: ReadWriteOnce
      storage: 100Mi
moviedb:
  name: postgres-data-movie
  app: movie-db
  image: postgres:12.1-alpine
  containerPort: 5432
  env:
    POSTGRES_DB: movie_db_dev
    POSTGRES_PASSWORD: movie_db_password
    POSTGRES_USER: movie_db_username 
  service:
    port: 5432
    targetPort: 5432
  volumeMounts:
    mountPath: /var/lib/postgresql/data
  pvc:
    accessModes: ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
cast:
  name: cast
  replicas: 1
  image:
    repository: "lmalta3/cast-service"
    tag: "v2"
  ports:
    name: "8002"
    port: 8002
    targetPort: 8000
  containers:
    env:
      DATABASE_URI: postgresql://cast_db_username:cast_db_password@cast_db/cast_db_dev
    ports:
      containerPort: 8000
    volumeMounts:
      mountPath: /app/
      name: cast-service-claim0
castdb:
  name: cast-db
  app: cast-db
  env:
    POSTGRES_PASSWORD: cast_db_password
    POSTGRES_USER: datascientest
    POSTGRES_DB: datascientest        
  volumeMounts:
    mountPath: /var/lib/postgresql/data/
    name: postgres-data-movie
  volumes:
    name: postgres-data-movie
    persistentVolumeClaim:
      claimName: postgres-data-movie  
  service:
    port: 5432
    targetPort: 5432
  pvc:
    accessModes: ReadWriteOnce
    storage: 5Gi